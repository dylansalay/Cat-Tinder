{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/cat-tinder/cat-tinder-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { getCats } from './api';\nimport { createCat } from './api';\nimport { deleteCat } from './api';\nimport Cats from './pages/Cats';\nimport NewCat from './pages/NewCat';\nimport Header from './components/Header';\nimport Navigation from './components/Navigation';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewCat = newCatInfo => {\n      createCat(newCatInfo).then(successCat => {\n        console.log(\"Added: \", successCat);\n\n        if (typeof successCat.id === 'number') {\n          let successStatus = this.state.success;\n          successStatus = true;\n          this.setState({\n            success: successStatus\n          });\n          console.log(this.state.success);\n        }\n      });\n    };\n\n    this.handleDeleteCat = id => {\n      deleteCat(id).then(deleteCat => {\n        console.log(\"Deleted: \", deleteCat);\n\n        if (typeof deleteCat.id === 'number') {\n          let deleteStatus = this.state.deleteSuccess;\n          deleteSuccess = true;\n          this.setState({\n            deleteSuccess: deleteStatus\n          });\n          console.log(this.state.deleteSuccess);\n        }\n      });\n    };\n\n    this.state = {\n      cats: [],\n      success: false,\n      deleteSuccess: false\n    };\n  }\n\n  componentDidMount() {\n    getCats().then(APIcats => {\n      this.setState({\n        cats: APIcats\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/cats\",\n      render: props => React.createElement(Cats, {\n        cats: this.state.cats,\n        handleDeleteCat: this.handleDeleteCat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/newcat\",\n      render: props => React.createElement(NewCat, Object.assign({}, props, {\n        handleNewCat: this.handleNewCat,\n        success: this.state.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/learn/Desktop/cat-tinder/cat-tinder-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","getCats","createCat","deleteCat","Cats","NewCat","Header","Navigation","App","constructor","props","handleNewCat","newCatInfo","then","successCat","console","log","id","successStatus","state","success","setState","handleDeleteCat","deleteStatus","deleteSuccess","cats","componentDidMount","APIcats","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AACvCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,YAlBmB,GAkBHC,UAAD,IAAgB;AAC3BV,MAAAA,SAAS,CAACU,UAAD,CAAT,CACCC,IADD,CACMC,UAAU,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,UAAvB;;AACA,YAAI,OAAOA,UAAU,CAACG,EAAlB,KAAyB,QAA7B,EAAuC;AACnC,cAAIC,aAAa,GAAG,KAAKC,KAAL,CAAWC,OAA/B;AACAF,UAAAA,aAAa,GAAG,IAAhB;AACA,eAAKG,QAAL,CAAc;AAAED,YAAAA,OAAO,EAAEF;AAAX,WAAd;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWC,OAAvB;AACH;AACJ,OATD;AAUH,KA7BkB;;AAAA,SA+BnBE,eA/BmB,GA+BAL,EAAD,IAAQ;AACtBd,MAAAA,SAAS,CAACc,EAAD,CAAT,CACCJ,IADD,CACMV,SAAS,IAAI;AACfY,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBb,SAAzB;;AACA,YAAI,OAAOA,SAAS,CAACc,EAAjB,KAAwB,QAA5B,EAAsC;AAClC,cAAIM,YAAY,GAAG,KAAKJ,KAAL,CAAWK,aAA9B;AACAA,UAAAA,aAAa,GAAG,IAAhB;AACA,eAAKH,QAAL,CAAc;AAAEG,YAAAA,aAAa,EAAED;AAAjB,WAAd;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWK,aAAvB;AACH;AACJ,OATD;AAUH,KA1CkB;;AAEf,SAAKL,KAAL,GAAa;AACTM,MAAAA,IAAI,EAAE,EADG;AAETL,MAAAA,OAAO,EAAE,KAFA;AAGTI,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBzB,IAAAA,OAAO,GACFY,IADL,CACUc,OAAO,IAAI;AACb,WAAKN,QAAL,CAAc;AACdI,QAAAA,IAAI,EAAEE;AADQ,OAAd;AAGP,KALD;AAMH;;AA4BDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACA,MAAA,KAAK,MADL;AACM,MAAA,IAAI,EAAC,OADX;AAEA,MAAA,MAAM,EAAGlB,KAAD,IACR,oBAAC,IAAD;AACI,QAAA,IAAI,EAAG,KAAKS,KAAL,CAAWM,IADtB;AAEI,QAAA,eAAe,EAAE,KAAKH,eAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,KAAD;AACA,MAAA,KAAK,MADL;AACM,MAAA,IAAI,EAAC,SADX;AAEA,MAAA,MAAM,EAAGZ,KAAD,IACR,oBAAC,MAAD,oBAAYA,KAAZ;AACI,QAAA,YAAY,EAAE,KAAKC,YADvB;AAEI,QAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWC,OAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CAHR,CADJ;AA4BH;;AA1EsC","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport { getCats } from './api'\nimport { createCat } from './api'\nimport { deleteCat } from './api'\n\nimport Cats from './pages/Cats'\nimport NewCat from './pages/NewCat'\nimport Header from './components/Header'\nimport Navigation from './components/Navigation'\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cats: [],\n            success: false,\n            deleteSuccess: false\n        }\n    }\n\n    componentDidMount() {\n        getCats()\n            .then(APIcats => {\n                this.setState({\n                cats: APIcats\n            })\n        })\n    }\n\n    handleNewCat = (newCatInfo) => {\n        createCat(newCatInfo)\n        .then(successCat => {\n            console.log(\"Added: \", successCat);\n            if (typeof successCat.id === 'number') {\n                let successStatus = this.state.success\n                successStatus = true\n                this.setState({ success: successStatus})\n                console.log(this.state.success);\n            }\n        })\n    }\n\n    handleDeleteCat = (id) => {\n        deleteCat(id)\n        .then(deleteCat => {\n            console.log(\"Deleted: \", deleteCat);\n            if (typeof deleteCat.id === 'number') {\n                let deleteStatus = this.state.deleteSuccess\n                deleteSuccess = true\n                this.setState({ deleteSuccess: deleteStatus})\n                console.log(this.state.deleteSuccess);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Navigation />\n                <Header />\n                    <Router>\n                        <Switch>\n                            <Route\n                            exact path=\"/cats\"\n                            render={(props) =>\n                            <Cats\n                                cats={ this.state.cats}\n                                handleDeleteCat={this.handleDeleteCat}\n                            />\n                            }\n                            />\n                            <Route\n                            exact path=\"/newcat\"\n                            render={(props) =>\n                            <NewCat {...props}\n                                handleNewCat={this.handleNewCat}\n                                success={this.state.success}\n                            />\n                            }\n                            />\n                        </Switch>\n                    </Router>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}